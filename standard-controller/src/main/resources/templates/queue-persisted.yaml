apiVersion: v1
kind: Template
metadata:
  labels:
    app: enmasse
  name: queue-persisted
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      addressSpace: ${ADDRESS_SPACE}
      cluster_id: ${CLUSTER_ID}
    labels:
      monitoring-key: enmasse-tenants
      app: enmasse
      component: broker
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: ${NAME}
  spec:
    ports:
    - name: health-tls
      port: 8161
      protocol: TCP
      targetPort: jolokia
    clusterIP: None
    selector:
      name: ${NAME}
      role: broker
      infraType: standard
      infraUuid: ${INFRA_UUID}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    annotations:
      address: ${ADDRESS}
      addressSpace: ${ADDRESS_SPACE}
      cluster_id: ${CLUSTER_ID}
      enmasse.io/cert-cn: broker.${INFRA_UUID}
      enmasse.io/cert-secret: broker-internal-cert.${INFRA_UUID}
    labels:
      app: enmasse
      infraType: standard
      infraUuid: ${INFRA_UUID}
    name: ${NAME}
  spec:
    replicas: 1
    serviceName: ${NAME}
    selector:
      matchLabels:
        addresstype: queue
        app: enmasse
        name: ${NAME}
        role: broker
        infraType: standard
        infraUuid: ${INFRA_UUID}
    template:
      metadata:
        annotations:
          address: ${ADDRESS}
          addressSpace: ${ADDRESS_SPACE}
          cluster_id: ${CLUSTER_ID}
        labels:
          addresstype: queue
          app: enmasse
          name: ${NAME}
          role: broker
          infraType: standard
          infraUuid: ${INFRA_UUID}
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                podAffinityTerm:
                  labelSelector:
                    matchLabels:
                      app: enmasse
                      role: broker
                      infraType: standard
                      infraUuid: ${INFRA_UUID}
                  topologyKey: kubernetes.io/hostname
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 1
                preference:
                  matchExpressions:
                    - key: node-role.enmasse.io/messaging-infra
                      operator: In
                      values:
                        - "true"
        containers:
        - env:
          - name: MESSAGING_SERVICE_HOST
            value: messaging-${INFRA_UUID}
          - name: MESSAGING_SERVICE_PORT_AMQPS_BROKER
            value: 56671
          - name: MESSAGING_SERVICE_PORT_AMQPS_NORMAL
            value: 55671
          - name: INFRA_UUID
            value: ${INFRA_UUID}
          - name: QUEUE_NAME
            value: ${ADDRESS}
          - name: CLUSTER_ID
            value: ${CLUSTER_ID}
          - name: CERT_DIR
            value: /etc/enmasse-certs
          - name: CONNECTOR_IN_NETTY_THREADS
            value: ${BROKER_CONNECTOR_NETTY_THREADS}
          - name: CONNECTOR_OUT_NETTY_THREADS
            value: ${BROKER_CONNECTOR_NETTY_THREADS}
          - name: CONNECTOR_IN_IDLE_TIMEOUT_MS
            value: ${BROKER_CONNECTOR_IDLE_TIMEOUT_MS}
          - name: CONNECTOR_OUT_IDLE_TIMEOUT_MS
            value: ${BROKER_CONNECTOR_IDLE_TIMEOUT_MS}
          - name: ADDRESS_FULL_POLICY
            value: ${BROKER_ADDRESS_FULL_POLICY}
          - name: JAVA_OPTS
            value: ${BROKER_JAVA_OPTS}
          - name: AUTHENTICATION_SERVICE_HOST
            value: ${AUTHENTICATION_SERVICE_HOST}
          - name: AUTHENTICATION_SERVICE_PORT
            value: ${AUTHENTICATION_SERVICE_PORT}
          - name: AUTHENTICATION_SERVICE_CLIENT_SECRET
            value: ${AUTHENTICATION_SERVICE_CLIENT_SECRET}
          - name: AUTHENTICATION_SERVICE_SASL_INIT_HOST
            value: ${AUTHENTICATION_SERVICE_SASL_INIT_HOST}
          - name: AMQ_NAME
            value: serverData
          - name: HOME
            value: /var/run/artemis/split-1/
          image: ${BROKER_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          command:
          - /opt/apache-artemis/custom/bin/launch-broker.sh
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - $ARTEMIS_HOME/custom/bin/probe.sh
            initialDelaySeconds: 300
          name: broker
          ports:
          - containerPort: 5673
            name: amqp
          - containerPort: 8161
            name: jolokia
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - $ARTEMIS_HOME/custom/bin/probe.sh
            initialDelaySeconds: 10
          volumeMounts:
          - mountPath: /var/run/artemis
            name: data
          - mountPath: /opt/apache-artemis/custom
            name: broker-custom
            readOnly: false
          - mountPath: /opt/apache-artemis/support
            name: broker-support
            readOnly: true
        initContainers:
        - env:
          - name: MESSAGING_SERVICE_HOST
            value: messaging-${INFRA_UUID}
          - name: MESSAGING_SERVICE_PORT_AMQPS_BROKER
            value: 56671
          - name: MESSAGING_SERVICE_PORT_AMQPS_NORMAL
            value: 55671
          - name: QUEUE_SCHEDULER_SERVICE_HOST
            value: queue-scheduler-${INFRA_UUID}
          - name: QUEUE_SCHEDULER_SERVICE_PORT
            value: 5672
          - name: INFRA_UUID
            value: ${INFRA_UUID}
          - name: QUEUE_NAME
            value: ${ADDRESS}
          - name: CLUSTER_ID
            value: ${CLUSTER_ID}
          - name: CONNECTOR_IN_NETTY_THREADS
            value: ${BROKER_CONNECTOR_NETTY_THREADS}
          - name: CONNECTOR_OUT_NETTY_THREADS
            value: ${BROKER_CONNECTOR_NETTY_THREADS}
          - name: CONNECTOR_IN_IDLE_TIMEOUT_MS
            value: ${BROKER_CONNECTOR_IDLE_TIMEOUT_MS}
          - name: CONNECTOR_OUT_IDLE_TIMEOUT_MS
            value: ${BROKER_CONNECTOR_IDLE_TIMEOUT_MS}
          - name: GLOBAL_MAX_SIZE
            value: ${BROKER_GLOBAL_MAX_SIZE}
          - name: ENABLE_GLOBAL_DLQ
            value: ${ENABLE_GLOBAL_DLQ}
          - name: TREAT_REJECT_AS_UNMODIFIED_DELIVERY_FAILED
            value: ${BROKER_TREAT_REJECT_AS_UNMODIFIED_DELIVERY_FAILED}
          - name: USE_MODIFIED_FOR_TRANSIENT_DELIVERY_ERRORS
            value: ${BROKER_USE_MODIFIED_FOR_TRANSIENT_DELIVERY_ERRORS}
          - name: MIN_LARGE_MESSAGE_SIZE
            value: ${BROKER_MIN_LARGE_MESSAGE_SIZE}
          - name: ADDRESS_FULL_POLICY
            value: ${BROKER_ADDRESS_FULL_POLICY}
          - name: JAVA_OPTS
            value: ${BROKER_JAVA_OPTS}
          - name: AUTHENTICATION_SERVICE_HOST
            value: ${AUTHENTICATION_SERVICE_HOST}
          - name: AUTHENTICATION_SERVICE_PORT
            value: ${AUTHENTICATION_SERVICE_PORT}
          - name: AUTHENTICATION_SERVICE_CLIENT_SECRET
            value: ${AUTHENTICATION_SERVICE_CLIENT_SECRET}
          - name: AUTHENTICATION_SERVICE_SASL_INIT_HOST
            value: ${AUTHENTICATION_SERVICE_SASL_INIT_HOST}
          - name: AMQ_NAME
            value: serverData
          - name: HOME
            value: /var/run/artemis/split-1/
          image: ${BROKER_PLUGIN_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          name: broker-plugin
          volumeMounts:
          - mountPath: /etc/enmasse-certs
            name: broker-internal-cert
            readOnly: true
          - mountPath: /etc/authservice-ca
            name: authservice-ca
            readOnly: true
          - mountPath: /opt/apache-artemis/custom
            name: broker-custom
            readOnly: false
        volumes:
        - name: broker-custom
          emptyDir: {}
        - name: authservice-ca
          secret:
            secretName: authservice-ca.${INFRA_UUID}
        - name: broker-internal-cert
          secret:
            secretName: broker-internal-cert.${INFRA_UUID}
        - name: broker-support
          secret:
            secretName: broker-support-${INFRA_UUID}
    volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        annotations:
          addressSpace: ${ADDRESS_SPACE}
          cluster_id: ${CLUSTER_ID}
        labels:
          app: enmasse
          infraType: standard
          infraUuid: ${INFRA_UUID}
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: ${BROKER_STORAGE_CAPACITY}
parameters:
- name: INFRA_UUID
  description: UUID to use for infrastructure
  required: true
- description: Storage capacity required for volume claims
  name: BROKER_STORAGE_CAPACITY
  value: 2Gi
- description: A valid addressSpace name for the address Space
  name: ADDRESS_SPACE
  required: true
- description: A valid name for the deployment
  name: NAME
  required: true
- description: A valid group id for the deployment
  name: CLUSTER_ID
  required: true
- description: The address to use for the queue
  name: ADDRESS
  value: ''
- description: The hostname of the authentication service used by this address
    space
  name: AUTHENTICATION_SERVICE_HOST
  required: true
- description: The port of the authentication service used by this address space
  name: AUTHENTICATION_SERVICE_PORT
  required: true
- description: The secret to use for validating authentication service cert
  name: AUTHENTICATION_SERVICE_CA_SECRET
  required: true
- description: The client cert to use as identity against authentication service
  name: AUTHENTICATION_SERVICE_CLIENT_SECRET
- description: The hostname to use in sasl init
  name: AUTHENTICATION_SERVICE_SASL_INIT_HOST
- description: Address full policy
  name: BROKER_ADDRESS_FULL_POLICY
  value: FAIL
- description: Broker Java Options
  name: BROKER_JAVA_OPTS
  value: ""
- description: Global max size for all addresses in broker. Cannot be larger than
    1/4 of JVM size
  name: BROKER_GLOBAL_MAX_SIZE
  value: "-1"
- name: BROKER_CONNECTOR_NETTY_THREADS
  description: Number of threads to allocate to connectors
  value: "4"
- name: BROKER_CONNECTOR_IDLE_TIMEOUT_MS
  description: Idle timeout set for connectors
  value: "16000"
- name: IMAGE_PULL_POLICY
  description: Image Pull Policy
  value: ${env.IMAGE_PULL_POLICY}
- name: BROKER_IMAGE
  description: Broker Image
  value: ${env.BROKER_IMAGE}
- name: BROKER_PLUGIN_IMAGE
  description: Broker Plugin Image
  value: ${env.BROKER_PLUGIN_IMAGE}
- name: BROKER_TREAT_REJECT_AS_UNMODIFIED_DELIVERY_FAILED
  description: Treat reject as unmodified delivery failed
  value: "true"
- name: BROKER_USE_MODIFIED_FOR_TRANSIENT_DELIVERY_ERRORS
  description: Use modified for transient delivery errors
  value: "true"
- name: BROKER_MIN_LARGE_MESSAGE_SIZE
  description: Min large message size
  value: "-1"
- name: ENABLE_GLOBAL_DLQ
  description: Enable Global DLQ
  value: "false"
