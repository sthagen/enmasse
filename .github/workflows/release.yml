name: Release job
env:
  TAG: "latest"
  DOCKER_ORG: enmasse
  KUBERNETES_NAMESPACE: "enmasse-infra"
  REGISTRY_USER: "enmasse+ci"

on:
  push:
    tags:
      - '0.*'

jobs:
  smoke:
    name: Smoke tests and Release
    env:
      DOCKER_REGISTRY: "quay.io"
      TAG: "latest"
      RELEASE: true
      PUSH_REGISTRY: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Clean disk
        run: ./.github/scripts/clean_disk.sh

      - name: Set version and tag
        id: version
        run: |
          echo "::set-env name=VERSION::$(grep "release.version" pom.properties| cut -d'=' -f2)"
          echo "::set-output name=VERSION::$(grep "release.version" pom.properties| cut -d'=' -f2)"
          echo "::set-env name=TAG::$(grep "maven.version" pom.properties| cut -d'=' -f2)"
          echo "::set-output name=TAG::$(grep "maven.version" pom.properties| cut -d'=' -f2)"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Install dependencies
        run: ./.github/scripts/install_dep.sh

      - uses: actions/setup-go@v2
        with:
          go-version: '1.13.1'
      - run: go version

      - name: setup-docker
        run: ./.github/scripts/setup_docker.sh

      - name: Minikube setup with registry V1.0.2-2
        uses: EnMasseProject/minikube-setup@V1.0.2-2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.2

      - name: Setup OLM
        run: ./.github/scripts/setup-olm.sh

      - name: Build
        id: build
        run: |
          export REGISTRY_PASS=${{ secrets.REGISTRY_PASS }}
          ./.github/scripts/build.sh

      - name: Smoke tests
        run: ./.github/scripts/smoke_test.sh

      - name: OLM tests
        run: ./.github/scripts/olm_test.sh

      - name: Collect logs
        if: failure()
        run: ./.github/scripts/collectLogs.sh

      - name: Upload artifacts
        if: failure()
        uses: actions/upload-artifact@v1.0.0
        with:
          name: smoke-test-logs
          path: test-logs.zip

      - name: Create Release
        if: job.status == 'success'
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Set asset path
        if: job.status == 'success'
        run: |
          echo "::set-env name=ASSETPATH::templates/build/default/enmasse-$(echo $TAG).tgz"
          echo "::set-env name=ASSETNAME::enmasse-$(echo $TAG).tgz"
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: true

      - name: Upload Release Asset
        if: job.status == 'success'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSETPATH }}
          asset_name: ${{ env.ASSETNAME }}
          asset_content_type: application/gzip
    
      - name: Publish documentation
        env:
          FROM: .
          TO: website
          CI_TOKEN: ${{ secrets.CI_TOKEN }}
        run: ./.github/scripts/publish_docs.sh
